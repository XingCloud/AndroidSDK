<?xml version="1.0"?>
<project name="XingCloudAndroid" default="main" basedir=".">
	<!-- sdk output path -->
	<property name="sdk.jar" value="${basedir}/output/xingcloudandroid.jar"/>
	<!-- secret key -->
	<property name="skey" value="#secret_key#" />
	<!-- consumer key -->
	<property name="ckey" value="#consumer_key#" />
	<!-- immigrate from old xingcloud sdk -->
	<property name="immigrate" value=""/>
	<property name="genDoc" value="" />

	<property name="javac.src" value="1.6"/>
	<property name="javadoc.path" value="${basedir}/doc"/>
	<property name="core.path" value="${basedir}" />
	<property name="core.src" value="${core.path}/src"/>
	<property name="core.classes" value="${core.path}/bin"/>
	<property name="lib.dir" value="${core.path}/libs"/>
	<property name="depens.dir" value="${core.path}/depens"/>
    <property name="key.path" value="com/xingcloud/core" />
    <property name="key.class" value="${key.path}/SecurityKey" />
    <property name="key.file" value="${core.src}/${key.class}.java" />
	<property name="build.debug" value="true"/>
	
	<property name="gencode.path" value="${basedir}/gencode"/>

	<path id="classpath">
		<fileset dir="${depens.dir}" includes="**/*.jar"/>
		<fileset dir="${lib.dir}" includes="**/*.jar"/>
	</path>

	<target name="main" depends="pre_clean,updateKeys,make,javadoc,post_clean" description="cleans and runs the full build"/>

	<target name="prepare">
		<echo level="info">${ant.file}</echo>
		<mkdir dir="${core.classes}"/>
		<chmod file="${core.classes}" perm="ugo+rx" />
	</target>

	<target name="compile_core" depends="prepare" description="compile_core">
		<javac source="${javac.src}" target="${javac.src}" debug="${build.debug}" destdir="${core.classes}" srcdir="${core.src}"
            classpathref="classpath">
            <compilerarg  line="-encoding UTF-8"/>
			<include name="**/*.java" />
		</javac>
	</target>
	
	<condition property="immigrate.exist">
		<and>
			<available file="${immigrate}" type="file"/>
		</and>
	</condition>
	<condition property="gendoc">
		<and>
			<istrue value="${genDoc}"/>
		</and>
	</condition>
	
	<target name="immigrate" depends=""  if="immigrate.exist" description="immigrate">
		<unjar dest="${gencode.path}" src="${immigrate}" />
		<echo level="info">copying skey and ckey</echo>
		<copy todir="${core.classes}/${key.path}" file="${gencode.path}/${key.class}.class" overwrite="true"/>
	</target>

	<target name="copy_gencode" depends="immigrate" description="copy_gencode">
		<echo level="info">copying gen_code</echo>
		<mkdir dir="${core.classes}/model"/>
		<copy todir="${core.classes}/model" overwrite="true" failonerror="false">
			<fileset dir="${gencode.path}/model"/>
		</copy>
	</target>

	<target name="make" depends="compile_core,copy_gencode" description="compile and create compiler jars">
		<echo message="Building libs"/>
		<copy todir="${core.classes}" file="${core.path}/sdk-description.xml"/>
		<jar file="${sdk.jar}" basedir="${core.classes}"
            includes="com/xingcloud/**/*,model/**/*,sdk-description.xml">
            <archives>
                <zips>
                	<fileset dir="${lib.dir}" includes="**/*.jar"/>
                </zips>
            </archives>
            <manifest>
				<attribute name="Sealed" value="false"/>
				<attribute name="Implementation-Title" value="XingCloudAndroid"/>
				<attribute name="Implementation-Version" value="1.0.0.0"/>
				<attribute name="Implementation-Vendor" value="XingCloud"/>
			</manifest>
		</jar>
	</target>

    <property name="javadoc.sourcepath" value="${core.src}"/>

	<target name="javadoc" if="gendoc">
		<javadoc access="public" author="false" additionalparam="-encoding utf-8 -charset utf-8" classpath="${core.classes}" classpathref="classpath" destdir="${javadoc.path}" 
	            doctitle="Xingcloud Android SDK" nodeprecated="false" nodeprecatedlist="false" 
	            noindex="false" nonavbar="false" notree="false" packagenames="com.xingcloud.*"
	            source="1.6" sourcepath="${javadoc.sourcepath}" splitindex="true" use="true" version="true">
	    </javadoc>
	</target>

	<target name="pre_clean" description="pre_clean">
		<delete failonerror="false" file="${sdk.jar}"/>
		<delete failonerror="false" dir="${core.classes}"/>
		<delete failonerror="false" dir="${gencode.path}"/>
	</target>

	<target name="post_clean" description="post_clean">
		<delete failonerror="false" dir="${core.classes}"/>
		<delete failonerror="false" dir="${gencode.path}"/>
	</target>
	
	<target name="updateKeys" description="updateKeys">
		<replace file="${key.file}" token="#secret_key#" value="${skey}" summary="true"/>
        <replace file="${key.file}" token="#consumer_key#" value="${ckey}" summary="true"/>
	</target>
</project>
